---
export interface DeezerPlaylist {
  id: string;
  title: string;
  description: string;
  duration: number;
  public: boolean;
  is_loved_track: boolean;
  collaborative: boolean;
  nb_tracks: number;
  fans: number;
  link: string;
  share: string;
  picture: string;
  picture_small: string;
  picture_medium: string;
  picture_big: string;
  picture_xl: string;
  checksum: string;
  tracklist: string;
  creation_date: Date;
  md5_image: string;
  picture_type: string;
  creator: Creator;
  type: string;
  tracks: Tracks;
}

export interface Creator {
  id: string;
  name: string;
  tracklist: string;
  type: CreatorType;
  link?: string;
}

export enum CreatorType {
  Artist = "artist",
  User = "user",
}

export interface Tracks {
  data: Datum[];
  checksum: string;
}

export interface Datum {
  id: string;
  readable: boolean;
  title: string;
  title_short: string;
  title_version: string;
  link: string;
  duration: string;
  rank: string;
  explicit_lyrics: boolean;
  explicit_content_lyrics: number;
  explicit_content_cover: number;
  preview: string;
  md5_image: string;
  time_add: number;
  artist: Creator;
  album: Album;
  type: DatumType;
}

export interface Album {
  id: string;
  title: string;
  cover: string;
  cover_small: string;
  cover_medium: string;
  cover_big: string;
  cover_xl: string;
  md5_image: string;
  tracklist: string;
  type: AlbumType;
}

export enum AlbumType {
  Album = "album",
}

export enum DatumType {
  Track = "track",
}
import { getDeezerPlaylist } from "../scripts/deezer.ts";
const tracks = await getDeezerPlaylist(); // Récupère les pistes côté serveur
---

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Top 100 France 2023</title>
</head>
<body>
    <h1>Titres</h1>
    <ul id="playlist">
        {tracks.map((track: Datum, index: number) => (
        <li
            data-index={index + 1}
            data-title={track.title}
            data-artist={track.artist.name}
            data-img={track.album.cover}
            data-audio={track.preview}
        >
            <h3>{index + 1}. {track.title}</h3>
            <p>{track.artist.name}</p>
            <p>{track.album.title}</p> <!-- Affichage du titre de l'album -->
            <img src={track.album.cover} alt={`cover of ${track.title}`} />
            <audio controls="" preload="none">
                <source src={track.preview} type="audio/mpeg">
                Your browser does not support the audio element.
            </audio>
        </li>
        ))}
    </ul>
    
    <script>
        document.addEventListener("DOMContentLoaded", () => {
        const tracks = document.querySelectorAll("#playlist li");
    
            tracks.forEach((track) => {
                const index = track.getAttribute("data-index");
                const title = track.getAttribute("data-title");
                const artist = track.getAttribute("data-artist");
                const img = track.getAttribute("data-img");
                const audio = track.getAttribute("data-audio");
        
                console.log(`${index}. ${title} - ${artist}`);
            });
        });
    </script>
  </body>
  </html>



